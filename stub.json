{"config":{"system_prompt":"","model":"","temperature":0,"top_p":1,"framework":"nextjs-page-tailwind"},"prompts":[{"prompt":"import collections\nimport datetime\nimport glob\nimport json\nimport numbers\nimport os\nimport os.path\nimport smtplib\nimport ssl\nimport time\nimport warnings\nfrom datetime import datetime, timedelta\nfrom email import encoders\nfrom email.mime.base import MIMEBase\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.text import MIMEText\nfrom os.path import exists\n\nimport numpy as np\nimport pandas as pd\nimport requests\nimport yfinance as yf\nfrom bs4 import BeautifulSoup\nfrom pandas_datareader import data as pdr\nfrom sklearn.ensemble import AdaBoostRegressor, ExtraTreesRegressor\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn.ensemble import RandomForestRegressor, GradientBoostingRegressor\nfrom sklearn.exceptions import ConvergenceWarning\nfrom sklearn.gaussian_process import GaussianProcessRegressor\nfrom sklearn.gaussian_process.kernels import RBF\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.linear_model import RANSACRegressor\nfrom sklearn.linear_model import (\n    Ridge,\n    Lasso,\n    ElasticNet,\n    BayesianRidge,\n    LassoLars,\n    OrthogonalMatchingPursuit,\n    HuberRegressor,\n    PassiveAggressiveRegressor,\n)\nfrom sklearn.neighbors import KNeighborsRegressor\nfrom sklearn.neural_network import MLPRegressor\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.svm import SVR\nfrom sklearn.tree import DecisionTreeRegressor\nfrom sklearn.tree import ExtraTreeRegressor\nfrom xgboost import XGBRegressor\nfrom yahoo_fin import stock_info as si\n\nglobal text\n\nwarnings.simplefilter(action=\"ignore\", category=FutureWarning)\nwarnings.simplefilter(action=\"ignore\", category=ConvergenceWarning)\nwarnings.filterwarnings(\"ignore\", category=ConvergenceWarning)\nyf.pdr_override()  # <== that's all it takes :-)\nmetodo = 2  # metodo 1 : yahoo_fin # metodo 2 : yfinance\n\nkey_alphavantage = \"UNO4CZQHSBZSN71N\"\nkey_iexcloud = \"pk_535a5cea89924758973f568be466a978\"\nkey_finnhub = \"cdlp49qad3i3mjcqta6gcdlp49qad3i3mjcqta70\"\n\nprecision_round = 3","md5":"945c27f34f06e054cd9de53aca81664d"}]}